.row {
  max-width: $grid-width; // if we have enough available space,
  //then it will have the width that we specified but if there is not enough width,
  //so basically if the viewport is smaller than width that we specified here, then it will simply fill 100% of the available space
  // background-color: #eee;
  margin: 0 auto; // to always center this row in the viewport.; to centre block elements inside of another block element.

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include clearfix;

  //attribute selector
  // ^ start with col
  // $ end with col
  // * simply contain col
  // all the class attribute that starts with col-
  [class^="col-"] {
    // background-color: orangered;
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    // #{} : to use sass variable in calc
    width: calc(
      (100% - #{$gutter-horizontal}) / 2
    ); // can perform mathematical operations [and we can mix units in here (diff. b/w native CSS calculations and Sass)]
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      (2 * (100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      ((100% - 3 * #{$gutter-horizontal}) / 2) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      (3 * (100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}

// .row:last-child() - selects last row element
// .row:not() - selects everything except last child

// if all the child elements of row element are floated, the height collapses and becomes zero. : use clearfix hack
// .row::after {
